name: Python package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - name: Install packages
      run: |
        sudo apt-get install libpoppler-cpp-dev libzbar0 tesseract-ocr

    - name: Compile and install yara
      run: |
        sudo apt-get install automake libtool make gcc pkg-config
        wget https://github.com/VirusTotal/yara/archive/refs/tags/v4.5.0.tar.gz -O yara.tar.gz
        tar xzf yara.tar.gz
        pushd yara-*
        ./bootstrap.sh
        ./configure
        make
        sudo make install
        popd

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade poetry
        poetry install
        # Tell poetry to not use a virtual environment
        # poetry config virtualenvs.create false

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run server in background
      run: |
        poetry run misp-modules -l 127.0.0.1 -s 2>error.log &
        sleep 10

    - name: Check if server is running
      run: |
        curl -sS localhost:6666/healthcheck

    - name: Test with pytest
      run: |
        poetry run pytest

    - name: Show error log
      if: always()
      run: |
        cat error.log
